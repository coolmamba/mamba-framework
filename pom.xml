<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mamba</groupId>
	<artifactId>mamba-framework</artifactId>
	<version>${mamba.framework.version}</version>
	<packaging>pom</packaging>
	<name>mamba-framework</name>
	<description>曼巴开源</description>
	<url>http://maven.apache.org</url>

	<developers>
		<developer>
			<email>lily_mcfly@sina.com</email>
			<id>junmamba</id>
			<name>八两俊</name>
			<organization>曼巴开源</organization>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<servlet.api.version>3.1.0</servlet.api.version>
		<spring.boot.version>1.5.10.RELEASE</spring.boot.version>
		<mamba.framework.version>0.0.1-SNAPSHOT</mamba.framework.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- 导入SpringBoot版本 需要注意以下几点： 1、dependencyManagement只是为了统一所有依赖项的版本管理，只是进行声明，不会引发buildpath改变。 
					如果需要引入依赖项，则需要在“同级的dependencies”元素中增加依赖项。 2、如果需要覆盖当前依赖项dependency中的某个jar包的版本，需要在当前dependency之前添加另一个dependency进行覆盖 -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.api.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<modules>
		<module>mamba-framework-context</module>
		<module>mamba-framework-sip</module>
		<module>mamba-framework-web</module>
	</modules>
</project>
